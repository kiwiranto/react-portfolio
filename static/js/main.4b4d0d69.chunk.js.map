{"version":3,"sources":["scss/module/pagestate.module.scss","layouts/header/header.js","pagestates/home/home.js","pagestates/portfolio/portfolio.js","pagestates/profile/profile.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bg_red","bg_green","bg_blue","Header","react_default","a","createElement","className","react_router_dom","to","activeClassName","Component","Home","styles","Portfolio","Profile","Router","react_router","path","exact","component","App","header_Header","router","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b4d0d69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_red\":\"pagestate_bg_red__nby1w\",\"bg_green\":\"pagestate_bg_green__3yG7h\",\"bg_blue\":\"pagestate_bg_blue__1oJJe\"};","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.scss';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"container\">\r\n          <nav className=\"nav\">\r\n            <NavLink to={'/home'} className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\r\n            <NavLink to={'/profile'} className=\"nav-link\">Profile</NavLink>\r\n            <NavLink to={'/portfolio'} className=\"nav-link\">Portfolio</NavLink>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport styles from '../../scss/module/pagestate.module.scss';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.bg_red}>\r\n        <div className=\"container\">\r\n          <h2>Home</h2>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from '../../scss/module/pagestate.module.scss';\r\n\r\nexport default class Portfolio extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.bg_blue}>\r\n        <div className=\"container\">\r\n          <h2>Portfolio</h2>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport styles from '../../scss/module/pagestate.module.scss';\r\n\r\nexport default class Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.bg_green}>\r\n        <div className=\"container\">\r\n          <h2>Profile</h2>\r\n        </div>        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Home from \"./pagestates/home/home\";\r\nimport Portfolio from \"./pagestates/portfolio/portfolio\";\r\nimport Profile from \"./pagestates/profile/profile\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/home\" component={Home} />\r\n      <Route path=\"/profile\" component={Profile} />\r\n      <Route path=\"/portfolio\" component={Portfolio} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './layouts/header/header';\nimport Router from './router';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        \n        <main>\n          <Router />\n        </main>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}